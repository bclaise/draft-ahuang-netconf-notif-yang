



Network Working Group                                      A. Huang Feng
Internet-Draft                                               P. Francois
Updates: RFC7950 RFC7951 RFC9254 (if approved)                 INSA-Lyon
Intended status: Standards Track                                 T. Graf
Expires: 17 April 2025                                          Swisscom
                                                               B. Claise
                                                                  Huawei
                                                         14 October 2024


           Extensible YANG model for YANG-Push Notifications
                draft-ahuang-netconf-notif-container-01

Abstract

   This document defines an extensible structure for YANG-Push
   Notification to be used in NETCONF environments.  The definition of
   this YANG model allows the encoding of YANG-Push Notifications in any
   YANG compatible encodings such as XML, JSON or CBOR.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 17 April 2025.







Huang Feng, et al.        Expires 17 April 2025                 [Page 1]

Internet-Draft      YANG-Push Notification Container        October 2024


Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Relationship to past documents  . . . . . . . . . . . . . . .   3
     2.1.  Relationship to RFC5277 . . . . . . . . . . . . . . . . .   3
     2.2.  Relationship to RFC8639 . . . . . . . . . . . . . . . . .   4
     2.3.  Relationship to RFC7950 . . . . . . . . . . . . . . . . .   4
     2.4.  Relationship to RFC7951 . . . . . . . . . . . . . . . . .   4
     2.5.  Relationship to RFC9254 . . . . . . . . . . . . . . . . .   4
   3.  Solution  . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  Enabling the Notification Envelope  . . . . . . . . . . .   5
     3.2.  Discovering the support of this model . . . . . . . . . .   6
     3.3.  Notification Envelope . . . . . . . . . . . . . . . . . .   6
     3.4.  Extensions for the Notification Envelope  . . . . . . . .  11
   4.  YANG Module . . . . . . . . . . . . . . . . . . . . . . . . .  17
     4.1.  YANG Module . . . . . . . . . . . . . . . . . . . . . . .  17
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  22
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  22
     6.1.  URI . . . . . . . . . . . . . . . . . . . . . . . . . . .  22
     6.2.  YANG module name  . . . . . . . . . . . . . . . . . . . .  23
     6.3.  YANG SID-file . . . . . . . . . . . . . . . . . . . . . .  23
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  23
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  23
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .  23
     8.2.  Informative References  . . . . . . . . . . . . . . . . .  25
   Appendix A.  .sid file  . . . . . . . . . . . . . . . . . . . . .  26
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  28










Huang Feng, et al.        Expires 17 April 2025                 [Page 2]

Internet-Draft      YANG-Push Notification Container        October 2024


1.  Introduction

   YANG-Push [RFC8639] allow NETCONF [RFC6241] servers and YANG-Push
   publishers to send notifications to a data collection.  The NETCONF
   client and the YANG-Push receiver decodes the message and optionally
   validates the header and the content before forwarding to the next
   process.

   The notification container from YANG-Push was defined based on the
   XML model from NETCONF Event Notifications [RFC5277].  This model
   only has a single mandatory "eventTime" leaf and does offer a way to
   extend this header with new metadata.  Additionally, this XML model
   is only valid for XML-based environments.  When messages are encoded
   in other YANG encodings, such as JSON [RFC7951] or CBOR [RFC9254],
   validators cannot use YANG to validate the message schema.

   When a network engineer receives notifications, key metadata is
   required to provide message context.  Information such as the
   hostname of the network node which published the notification and the
   time the events or metrics were observed helps network engineers to
   correlate with other Network Telemetry [RFC9232] data collected
   through other protocols.

   For such reasons, this document proposes the following.  First, it
   provides an extensible YANG notification header allowing implementors
   and IETF contributors to easily add new metadata to the notification
   message.  Second, it provides the first crucial extensions enabling
   operators to identify which network node publishes which YANG-Push
   messages and when the events or metrics were observed on the network
   node.  And finally, it provides a way to enable and disable these
   extensions on a subscription basis, making the coexistence of
   different YANG-Push and NETCONF Event Notification [RFC5277]
   possible.

2.  Relationship to past documents

   This section shows the relationship to [RFC5277], [RFC8639],
   [RFC7951] and [RFC9254].

2.1.  Relationship to RFC5277

   [RFC5277] defines a mechanism for NETCONF nodes to send notifications
   to a collector.  These are the key relationships between the current
   document and [RFC5277]:

   *  This document does not change the structure defined by [RFC5277]
      nor update any behavior defined in [RFC5277].  Implementations of
      [RFC5277] use the header defined in Section 2.2.1 of [RFC5277].



Huang Feng, et al.        Expires 17 April 2025                 [Page 3]

Internet-Draft      YANG-Push Notification Container        October 2024


2.2.  Relationship to RFC8639

   Subscribed Notifications [RFC8639] defines a mechanism on top of
   [RFC5277] to stream notifications from the NETCONF node.  These are
   the key relationships between the current document and [RFC8639]:

   *  Section 1.4 of [RFC8639] states that the the solution uses the
      notification structure defined in [RFC5277].  This document
      proposes a new structure that NETCONF clients can enable.  When
      this new structure is used, notification messages are encoded as
      defined in Section Section 3.3.

   *  Section 2.4.2 of [RFC8639] defines how a YANG-Push subscription is
      defined via an the 'establish-subscription' RPC.  This document
      extends the RPCs from Subscribed Notifications [RFC8639] to
      support enabling the new header defined in this document.

2.3.  Relationship to RFC7950

   [RFC7950] defines how YANG data is encoded in XML.  These are the key
   relationship points between the current document and [RFC7950]:

   *  Section 4.2.10 of [RFC7950] defines the XML encoding of YANG
      notification.  This document defines a new header for such
      notifications.  When a NETCONF server or YANG-Push publisher
      implements this document, the notifications are encoded according
      to Section 3.3.2.1.

2.4.  Relationship to RFC7951

   [RFC7951] defines how YANG data is encoded using JSON.  These are the
   key relationship points between the current document and [RFC7951]:

   *  [RFC7951] does not define explicitly how a YANG notification
      should be encoded using JSON encoding.  This document specifies a
      new header for such notifications.  When a NETCONF server or YANG-
      Push publisher implements this document, the notifications are
      encoded according to Section 3.3.2.2.

2.5.  Relationship to RFC9254

   [RFC9254] defines how YANG data is encoded using CBOR.  These are the
   key relationship points between the current document and [RFC9254]:

   *  [RFC9254] does not define explicitly how a YANG notification
      should be encoded using CBOR encoding.  When a NETCONF server or
      YANG-Push publisher implements this document, the notifications
      are encoded according to Section 3.3.2.3.



Huang Feng, et al.        Expires 17 April 2025                 [Page 4]

Internet-Draft      YANG-Push Notification Container        October 2024


3.  Solution

   Section 4.2.10 of [RFC7950] defines the encoding of YANG
   Notifications.  A YANG Notification is created by defining a
   'notification' statement in the YANG module.  When a NETCONF server
   sends this notification, it is composed of two parts: a header
   containing metadata which encapsulates the content and the content
   defined by the 'notification' statement.

   In YANG 1.1 [RFC7950], the Notification header is based on the model
   defined in [RFC5277] which contains a single metadata 'eventTime'
   leaf.  An example extracted from [RFC7950] is shown in the following
   XML:

     <notification
         xmlns="urn:ietf:params:netconf:capability:notification:1.0">
       <eventTime>2007-09-01T10:00:00Z</eventTime>
       <link-failure xmlns="urn:example:system">
         <if-name>so-1/2/3.0</if-name>
         <if-admin-status>up</if-admin-status>
         <if-oper-status>down</if-oper-status>
       </link-failure>
     </notification>

   This document defines a new notification header and enables extending
   it with new metadata.  The Notification header defined in the
   following sections is to be used in YANG-Push [RFC8641] environments
   and can be both implemented with NETCONF [RFC6241] and RESTCONF
   [RFC8040].

   Section 3.1 defines how a client enables the header defined in this
   document.  Section 3.2 extends the model from [RFC9196] to enable
   NETCONF clients to discover the capability of using the new
   notification header.  Lastly, Section 3.3.2 defines the new
   notification header and how it is encoded using XML, JSON and CBOR.

3.1.  Enabling the Notification Envelope

   The use of the Notification envelope defined in this document can be
   enabled during the configuration of a YANG-Push subscription.  This
   document augments the "ietf-subscribed-notification" model [RFC8639]
   to support the configuration of "notification-envelope".









Huang Feng, et al.        Expires 17 April 2025                 [Page 5]

Internet-Draft      YANG-Push Notification Container        October 2024


     module: ietf-notification-container

       augment /sn:subscriptions/sn:subscription:
         +--rw enable-notification-envelope?   boolean {notification-envelope}?
         +--rw metadata
       augment /sn:establish-subscription/sn:input:
         +---w enable-notification-envelope?   boolean {notification-envelope}?
         +---w metadata
       augment /sn:modify-subscription/sn:input:
         +---w enable-notification-envelope?   boolean {notification-envelope}?
         +---w metadata

   When the node 'enable-notification-envelope' is set to true, the
   notifications published by a NETCONF server MUST use the structure
   defined in Section 3.3.1.  If any metadata is enabled during the
   configuration of the subscription, the metadata nodes MUST be present
   in the header.

3.2.  Discovering the support of this model

   A NETCONF client or YANG-Push receiver can discover the support of
   'notification-envelope' model through the capabilities model defined
   in [RFC9196].  This documents extends the 'ietf-notification-
   capabilities' model with a container that includes:

   *  A leaf 'notification-envelope', stating that the YANG notification
      can be encoded following the notification-envelope model.

   *  A container 'metadata' containing all the supported extensions to
      this header.

   The YANG model defined in Section 4 augments the 'ietf-notification-
   capabilities' model with the leaf and container listed above.

     augment /sysc:system-capabilities/notc:subscription-capabilities:
       +--ro notification-metadata
          +--ro notification-envelope?   boolean {notification-envelope}?
          +--ro metadata

   This model can be retrieved via a NETCONF <get> RPC.

3.3.  Notification Envelope

   This section defines how NETCONF YANG Notifications are structured
   when the notification envelope is enabled on a YANG-Push
   subscription.  The following sections define how this model is
   encoded in XML, JSON and CBOR.




Huang Feng, et al.        Expires 17 April 2025                 [Page 6]

Internet-Draft      YANG-Push Notification Container        October 2024


3.3.1.  Base Notification Model

   When a YANG-Push publisher uses the Notification Model defined in
   this document, the notification is structured as follows:

   *  The notification is encapsulated in a root "notification-envelope"
      container.

   *  The header of the notification contains the metadata that is
      enabled during the configuration of the subscription as a child
      nodes of the root "notification-envelope" container.

   *  The content of the notification defined by the 'notification'
      statement is encoded in the 'notification-contents' leaf.

   The following YANG tree [RFC8340] illustrates the notification
   envelope containing the metadata 'event-time' and 'some-other-
   metadata'.

     notifications:
       +---n notification-envelope
         +--ro event-time               yang:date-and-time
         +--ro some-other-metadata      string
         +--ro notification-contents?   <anydata>

3.3.2.  Encoding of the Notification model

   The YANG Notification can be encoded using XML
   [W3C.REC-xml-20001006][RFC7951], JSON [RFC7951] and CBOR [RFC9254].

3.3.2.1.  XML encoding

   A YANG notification encoded in XML is structured as a root
   "notification-envelope" container.  The namespace of this container
   is the namespace defined in the YANG module "ietf-notification-
   envelope":

       urn:ietf:params:xml:ns:netconf:notification:2.0

   Two mandatory child nodes within the "notification-envelope"
   container are expected, representing the event time and the
   notification payload.  The "event-time" node is defined within the
   same XML namespace as the "notification-envelope" container.  The
   "event-time" node MUST be compliant with [RFC3339].  Other metadata
   defined within the YANG module defined in Section 4 MUST use the same
   XML namespace.





Huang Feng, et al.        Expires 17 April 2025                 [Page 7]

Internet-Draft      YANG-Push Notification Container        October 2024


   The content of the notification that is defined by the 'notification'
   statement is encoded in the "notification-contents" node.  The name
   and namespace of this payload element are determined by the YANG
   module containing the 'notification' statement representing the
   notification message.

   The following example shows a "push-update" notification defined in
   the YANG module of YANG-Push [RFC8641] encoded in XML:

     <notification-envelope xmlns="urn:ietf:params:xml:ns:netconf:notification:2.0">
       <event-time>2024-10-10T10:59:55.32Z</event-time>
       <notification-contents>
         <push-update xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-push">
           <id>1011</id>
           <datastore-contents>
             <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces">
               <interface>
                 <name>eth0</name>
                 <oper-status>up</oper-status>
               </interface>
             </interfaces>
           </datastore-contents>
         </push-update>
       </notification-contents>
     </notification-envelope>

                     Figure 1: XML-encoded notification

3.3.2.2.  JSON Encoding

   A YANG notification encoded in JSON is structured as a root
   "notification-envelope" container.  The namespace of this container
   is the name of the YANG module "ietf-notification-envelope" defined
   in Section 4.

   Two child nodes within the "ietf-notification:notification-envelope"
   container are expected, representing the event time and the
   notification payload.  The "event-time" node is defined within the
   same namespace as the "ietf-notification-envelope:notification-
   envelope" container and is compliant with [RFC3339].  Other metadata
   defined within the YANG module defined in Section 4 MUST use the same
   namespace "ietf-notification-envelope".

   The content of the notification that is defined by the 'notification'
   statement is encoded in the "notification-contents" node.  The name
   and namespace of this payload element are determined by the YANG
   module containing the 'notification' statement representing the
   notification message.



Huang Feng, et al.        Expires 17 April 2025                 [Page 8]

Internet-Draft      YANG-Push Notification Container        October 2024


   The following example shows a "push-update" notification defined in
   the YANG module of YANG-Push [RFC8641] encoded in JSON:

       {
           "ietf-notification-envelope:notification-envelope": {
               "event-time": "2024-10-10T08:00:11.22Z",
               "notification-contents": {
                 "ietf-yang-push:push-update": {
                     "id": 1011,
                     "datastore-contents": {
                         "ietf-interfaces:interfaces": [
                             {
                                 "interface": {
                                     "name": "eth0",
                                     "oper-status": "up"
                                 }
                             }
                         ]
                     }
                 }
               }
           }
       }

                    Figure 2: JSON-encoded notification

3.3.2.3.  CBOR Encoding

   YANG data can be represented in CBOR using Names or SIDs in keys.
   The following sections shows how these messages are encoded in both
   cases.

3.3.2.3.1.  CBOR encoded messages using keys

   Notifications encoded using keys is similar to JSON encoding as
   defined in Section 3.3 of [RFC9254].  The key of the element can be
   the element itself or be namespace-qualified.  In the latter case,
   the namespace of the notification container uses the YANG module name
   "ietf-notification-envelope" defined in Section 4.

   Two child nodes within the "ietf-notification-envelope:notification-
   envelope" container are expected, representing the event time and the
   notification payload.  The "event-time" node is defined within the
   same namespace as the "ietf-notification-envelope:notification-
   envelope" container and is compliant with [RFC3339].






Huang Feng, et al.        Expires 17 April 2025                 [Page 9]

Internet-Draft      YANG-Push Notification Container        October 2024


   The content of the notification that is defined by the 'notification'
   statement is encoded in the "notification-contents" node.  The name
   and namespace of this payload element are determined by the YANG
   module containing the 'notification' statement representing the
   notification message.

   The following example shows a "push-update" notification defined in
   the YANG module of YANG-Push [RFC8641] encoded in CBOR using names as
   keys.  The example uses the CBOR diagnostic notation as defined in
   section 3.1 of [RFC9254]:

       {
           "ietf-notification-envelope:notification-envelope": {
               "event-time": "2024-10-10T08:00:11.22Z",
               "notification-contents": {
                 "ietf-yang-push:push-update": {
                     "id": 1011,
                     "datastore-contents": {
                         "ietf-interfaces:interfaces": [
                             {
                                 "interface": {
                                     "name": "eth0",
                                     "oper-status": "up"
                                 }
                             }
                         ]
                     }
                 }
               }
           }
       }

       Figure 3: CBOR-encoded notification using diagnostic notation

3.3.2.3.2.  CBOR encoded messages using YANG-SIDs

   A Notification encoded using YANG-SIDs replaces the names of the keys
   of the CBOR encoded message for a 63 bit unsigned integer.  This is
   defined in Section 3.2 of [RFC9254] and a process for SID allocation
   is defined in [I-D.ietf-core-sid].

   Two child nodes within the root container are expected, representing
   the event time and the notification payload.  The root container and
   the "event-time" node uses a SID and the content of the "event-time"
   is compliant with [RFC3339].






Huang Feng, et al.        Expires 17 April 2025                [Page 10]

Internet-Draft      YANG-Push Notification Container        October 2024


   The content of the notification that is defined by the 'notification'
   statement is encoded in the "notification-contents" node.  The name
   and namespace of this payload element are determined by the SIDs of
   the YANG module containing the 'notification' statement.

   This is an example of YANG-CBOR encoded notification using YANG SIDs
   [RFC9254].  The Figure 4 shows the message using the CBOR diagnostic
   notation as defined in section 3.1 of [RFC9254]:

       {
           2551: {
               1: "2024-10-10T08:00:11.22Z",
               2: {
                 "ietf-yang-push:push-update": {
                     "id": 1011,
                     "datastore-contents": {
                         "ietf-interfaces:interfaces": [
                             {
                                 "interface": {
                                     "name": "eth0",
                                     "oper-status": "up"
                                 }
                             }
                         ]
                     }
                 }
               }
           }
       }

        Figure 4: CBOR-encoded notification using YANG SIDs in CBOR
                            diagnostic notation

3.4.  Extensions for the Notification Envelope

   This section described two optional YANG notification header
   extensions which are by default enabled when supported.

3.4.1.  Support of Hostname and Sequencing in YANG Notifications

   When YANG-Push Notification messages are forwarded from a receiver to
   another system, such as a message broker or a time series database,
   the transport context is lost since it is not part of the metadata of
   the notification container.  Therefore, the downstream system is
   unable to associate the message to the publishing process (the
   exporting network node), nor able to detect message loss or
   reordering.




Huang Feng, et al.        Expires 17 April 2025                [Page 11]

Internet-Draft      YANG-Push Notification Container        October 2024


   To correlate network data among different Network Telemetry planes as
   described in Section 3.1 of [RFC9232] or among different YANG-Push
   subscription types as defined in Section 3.1 of [RFC8641], a
   reference to the node streaming the data is needed.  This is
   essential for understanding the timely relationship among these
   different planes and YANG-Push subscription types.

   Today, network operators work around this impediment by preserving
   the transport source IP address and sequence numbers of the
   publishing process.  However, this implies encoding this information
   in the YANG-Push Notification messages which impacts the semantic
   readability of the message in the downstream system.

   On top of that, the transport source IP address might not represent
   the management IP address by which the YANG-Push publisher should be
   known.  In other terms, the source-host [RFC6470], which is the
   "Address of the remote host for the session" might not be the
   management IP address.

   To overcome these issues, this document proposes a notification
   container extension with a hostname and a sequence number.  This
   allows the downstream system to not only be able to identify from
   which network node, subscription, and time the message was published
   but also, the order of the published messages.

   hostname:  Describes the node's hostname according to the 'sysName'
      object definition in [RFC1213] from where the message was
      published from.  This value is usually configured on the node by
      the administrator to uniquely identify the node in the network.

   sequence-number:  Generates a unique sequence number for each
      published message by the publisher process.  The number counts up
      at every published notification message as described in [RFC9187].

3.4.2.  Support of Observation Time in YANG Notifications

   To correlate network data among different Network Telemetry planes as
   described in Section 3.1 of [RFC9232] or among different YANG-Push
   subscription types defined in Section 3.1 of [RFC8641], observation-
   timestamp describes when the state change was observed or when the
   data was accounted.  This is essential for understanding the timely
   relationship among these different planes and YANG push subscription
   types.

   With above described hostname and sequence-number extensions the
   delay between the YANG Notification export and the arrival at the
   downstream system storing the data can be measured.  With
   observation-timestamp, the delay between the time of the network



Huang Feng, et al.        Expires 17 April 2025                [Page 12]

Internet-Draft      YANG-Push Notification Container        October 2024


   observation and the data export of the YANG push publisher process
   can be measured as well, extending the delay measurement scope from
   the time the network observation and storing the data.

   When the time bucket length in a time series database and the
   periodical YANG push subscription time is identical, the eventTime of
   the netconf notification message header is used for indexing, there
   is variable delay between the observation-timestamp and the event-
   time, and the anchor-time as described in Section 4.2 of [RFC8641] is
   close to the time bucket boundaries, a time bucket is going to have
   periodically 0 or 2 measurements indexed instead of 1.  Leading to
   inconsistent accounting errors in the time series database.  This
   problem is resolved by using the observation-timestamp instead of the
   event-time for time series database indexing.

   By extending YANG-Push Notifications with the observation-timestamp
   YANG object and a observation-point-in-time enumeration for streaming
   update YANG-Push notifications it is ensured that the observation-
   timestamp is always present with the best available time, it can be
   therefore used unconditionally in the data processing chain and with
   the observation-point-in-time enumeration there is semantic
   describing at which point in time the observation-timestamp was
   observed.

   observation-timestamp:  States the measurement observation time for
      the "push-update" notification in a "periodical" and for the
      "push-change-update" notification in a "on-change" subscription.

      By comparing the observation-timestamp of two "push-update"
      notifications in a periodical subscription, the collector can
      deduce the actual cadence of the measurements, and compare it with
      the subscription configuration.  In case of an "on-change"
      subscription it states the time when the network state change was
      observed.

   observation-point-in-time:  The enumeration states at which point in
      time the value of the observation-timestamp was observed.  Choices
      are:

      current-accounting states for "periodical" subscriptions, the
      point-in-time where the metrics are being polled and observed.

      initial-state states for "on-change sync on start" subscriptions,
      the initial point in time when the subscription was established
      and the state was observed.






Huang Feng, et al.        Expires 17 April 2025                [Page 13]

Internet-Draft      YANG-Push Notification Container        October 2024


      state-changed states for "on-change" and "on-change sync on start"
      subscriptions, the point in time when the state change was
      observed after the subscription was established.

   Figure 5 provides an example timeline of events to describe
   observation-timestamp and observation-point-in-time for "on-change
   sync on start" subscriptions.  At "T2" when the "on-change sync on
   start" subscription is established, the timestamp of "T2" is used in
   observation-timestamp and observation-point-in-time is set to
   "initial-state".  At "T3" and "T4" the timestamp of "T3" respectively
   "T4" is used in observation-timestamp and observation-point-in-time
   is set to "state-changed".

 Timeline
 ---------------------------------------------------------------------->
  | (T1) Interface | (T2) YANG-Push   | (T3) Interface | (T4) Interface
  | state changed  | "on-change sync  | state changed  | state changed
  | to "Up".       | on start"        | to "Down".     | to "Up".
  |                | subscription for |                |
  |                | interface state  |                |
  |                | is established.  |                |
  v                v                  v                v

  Figure 5: Example Timeline for On-Change Sync on Start Subscription

   Figure 6 provides an example of a JSON encoded, [RFC8259], "push-
   change-update" notification message with hostname and sequence-number
   as extension.























Huang Feng, et al.        Expires 17 April 2025                [Page 14]

Internet-Draft      YANG-Push Notification Container        October 2024


   ========== NOTE: '\' line wrapping per RFC 8792) ===========

   {
       "ietf-notification-envelope:notification-envelope": {
       "event-time": "2023-03-25T08:30:11.22Z",
       "hostname": "example-router",
       "sequence-number": 1,
       "observation-timestamp": "2023-03-25T08:30:11.22Z",
       "observation-point-in-time": "state-changed",
       "ietf-yang-push:push-change-update": {
         "id": 2222,
         "datastore-contents": {
           "yang-patch": {
             "patch-id": "patch_54",
             "comment": "Changing encoding to JSON and increasing \
             the period to 10 minutes",
             "edit": [
               {
                 "edit-id": "id_change_1",
                 "operation": "merge",
                 "target": "/ietf-subscribed-notifications\:subs\
                 criptions/subscription[id=2222]",
                 "value": {
                   "ietf-subscribed-notifications:encoding": \
                   "ietf-subscribed-notifications:encode-json",
                   "ietf-yang-push:periodic": {
                     "period": 60000
                   }
                 }
               }
             ]
           }
         }
       }
     }
   }

     Figure 6: JSON Push Example for a push-change-update notification
                                  message

   Figure 7 provides an example timeline of events to describe
   observation-point-in-time for "periodical" subscriptions.  The
   timestamp of observation-timestamp in "T2" is set at the start of the
   polling of the YANG data store to "T2" and point-in-time is set
   "current-accounting".  At "T3" the timestamp of observation-timestamp
   of "T3" is used.  At "T4" the timestamp of observation-timestamp of
   "T4" is used.




Huang Feng, et al.        Expires 17 April 2025                [Page 15]

Internet-Draft      YANG-Push Notification Container        October 2024


 Timeline
 ---------------------------------------------------------------------->
  | (T1) YANG-Push | (T2) YANG-Push | (T3) YANG-Push | (T4) YANG-Push
  | "periodical"   | "periodical"   | "periodical"   | "periodical"
  | subscription   | current        | current        | current
  | for interface  | accounting     | accounting.    | accounting.
  | counter is     |                |                |
  | established    |                |                |
  v                v                v                v

         Figure 7: Example Timeline for Periodical Subscription

   Figure 8 provides an example of a JSON encoded, [RFC8259], "push-
   update" notification message with hostname and sequence-number as
   extension.

   ========== NOTE: '\' line wrapping per RFC 8792) ===========

   {
       "ietf-notification-envelope:notification-envelope": {
       "event-time": "2023-03-25T08:30:11.22Z",
       "hostname": "example-router",
       "sequnce-number": 1,
       "observation-timestamp": "2023-03-25T08:30:11.22Z",
       "observation-point-in-time": "current-accounting",
       "ietf-yang-push:push-update": {
         "id": 6666,
         "datastore-contents": {
           "ietf-interfaces:interfaces": [
             {
               "interface": {
                 "name": "eth0",
                 "type": "iana-if-type:ethernetCsmacd",
                 "oper-status": "up",
                 "mtu": 1500
               }
             }
           ]
         }
       }
     }
   }

     Figure 8: JSON Push Example for a push-update notification message







Huang Feng, et al.        Expires 17 April 2025                [Page 16]

Internet-Draft      YANG-Push Notification Container        October 2024


4.  YANG Module

4.1.  YANG Module

   The YANG module augments the module "ietf-subscribed-notifications"
   [RFC8641] and uses "ietf-yang-types" module [RFC6991].

   <CODE BEGINS> file "ietf-notification-envelope@2024-10-10.yang"
   module ietf-notification-envelope {
     yang-version 1.1;
     namespace "urn:ietf:params:xml:ns:netconf:notification:2.0";
     prefix inotenv;
     import ietf-yang-types {
       prefix yang;
       reference
         "RFC 6991: Common YANG Data Types";
     }
     import ietf-subscribed-notifications {
       prefix sn;
       reference
         "RFC 8639: Subscription to YANG Notifications";
     }
     import ietf-system-capabilities {
       prefix sysc;
       reference
         "RFC 9196: YANG Modules Describing Capabilities for
          Systems and Datastore Update Notifications";
     }
     import ietf-notification-capabilities {
       prefix notc;
       reference
         "RFC 9196: YANG Modules Describing Capabilities for
          Systems and Datastore Update Notifications";
     }

     organization "IETF NETCONF (Network Configuration) Working Group";
     contact
       "WG Web:   <https://datatracker.ietf.org/group/netconf/>
        WG List:  <mailto:netconf@ietf.org>

        Authors:  Alex Huang Feng
                  <mailto:alex.huang-feng@insa-lyon.fr>
                  Pierre Francois
                  <mailto:pierre.francois@insa-lyon.fr>
                  Thomas Graf
                  <mailto:thomas.graf@swisscom.com>
                  Benoit Claise
                  <mailto:benoit.claise@huawei.com>";



Huang Feng, et al.        Expires 17 April 2025                [Page 17]

Internet-Draft      YANG-Push Notification Container        October 2024


     description
       "Defines a Notification structure for Subscribed Notifications
       [RFC8639] and YANG-Push [RFC8641]. When this Notification header
       is enabled through a configuration, the root container of the
       notification is defined by the

       This module can be used to validate XML encoded notifications
       [RFC7950], JSON encoded messages [RFC7951] and CBOR encoded
       messages [RFC9254]. Refer to Section Y of RFC XXXX for more
       details.

       Copyright (c) 2024 IETF Trust and the persons identified as
       authors of the code.  All rights reserved.

       Redistribution and use in source and binary forms, with or
       without modification, is permitted pursuant to, and subject to
       the license terms contained in, the Revised BSD License set
       forth in Section 4.c of the IETF Trust's Legal Provisions
       Relating to IETF Documents
       (https://trustee.ietf.org/license-info).

       This version of this YANG module is part of RFC XXXX
       (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
       for full legal notices.";

     revision 2024-10-14 {
       description
         "First revision";
       reference
         "RFC XXXX: YANG-Push Notification Container";
     }

     feature notification-envelope {
       description
         "Indicates that YANG-Push supports the notification-envelope
         as defined in RFC XXXX.";
     }

     feature notification-hostname-sequence-number {
       description
         "Indicates that YANG-Push supports the hostname
             and sequence-number metadata in the notification-envelope
             as defined in RFC XXXX.";
     }

     feature notification-observation-timestamp {
       description
         "Indicates that YANG-Push supports the sequence-number metadata



Huang Feng, et al.        Expires 17 April 2025                [Page 18]

Internet-Draft      YANG-Push Notification Container        October 2024


             in the notification-envelope as defined in RFC XXXX.";
     }

     grouping notif-env-configuration {
       description
         "This grouping defines the configuration switches for
         enabling the notification-envelope defined in RFC XXXX
         and the different supported metadata.";
       leaf enable-notification-envelope {
         if-feature notification-envelope;
         type boolean;
         default false;
         description
           "Enables YANG-Push to use the notification-envelope
           defined in RFC XXXX.";
       }
       container metadata {
         description
           "Container for configuring optional metadata.";
                       leaf notification-hostname-sequence-number {
                             if-feature notification-hostname-sequence-number;
                             type boolean;
                             default true;
                             description
                   "When enabled, hostname and sequence-number is sent
                                   in the YANG-Push notifications as defined in the
                                   YANG-Push notification-envelope in RFC XXXX.";
                           }
                       leaf notification-observation-timestamp {
                             if-feature notification-observation-timestamp;
                             type boolean;
                             default true;
                             description
                   "When enabled, observation-timestamp and
                                   observation-point-in-time is sent in the YANG-Push
                                   notifications as defined in the YANG-Push
                                   notification-envelope in RFC XXXX.";
                           }
       }
     }

     grouping notif-env-capabilities {
       description
         "This grouping defines the capabilities for
         the notification-envelope defined in RFC XXXX
         and the different supported metadata.";
       leaf notification-envelope {
         if-feature notification-envelope;



Huang Feng, et al.        Expires 17 April 2025                [Page 19]

Internet-Draft      YANG-Push Notification Container        October 2024


         type boolean;
         description
           "Supports YANG-Push to use the notification-envelope
           defined in RFC XXXX.";
       }
       container metadata {
         description
           "Container with the supported optional metadata by the
           YANG-Push publisher.";
                       leaf notification-hostname-sequence-number {
                             if-feature notification-hostname-sequence-number;
                             type boolean;
                             description
                   "Supports hostname and sequence-number
                                   in the YANG-Push notifications as defined in the
                                   YANG-Push notification-envelope in RFC XXXX.";
                           }
                       leaf notification-observation-timestamp {
                             if-feature notification-observation-timestamp;
                             type boolean;
                             description
                   "Supports observation-timestamp and
                                   observation-point-in-time in the YANG-Push
                                   notifications as defined in the YANG-Push
                                   notification-envelope in RFC XXXX.";
                           }
       }
     }

     notification notification-envelope {
       leaf event-time {
         type yang:date-and-time;
         mandatory true;
         description
           "The date and time the event was generated by the event
           source. This parameter is of type dateTime and compliant
           to [RFC3339].";
       }
       leaf hostname {
         type inet:host;
         mandatory true;
         description
           "The hostname of the network node according to
           [RFC1213]. This value is usually configured on the node
           by the administrator to uniquely identify the node in
           the network.";
       }
       leaf sequence-number {



Huang Feng, et al.        Expires 17 April 2025                [Page 20]

Internet-Draft      YANG-Push Notification Container        October 2024


         type yang:counter32;
         mandatory true;
         description
           "Unique sequence number as described in [RFC9187] for each
           published message.";
       }
       leaf observation-timestamp {
         type yang:date-and-time;
         description
           "This is the time when events or metrics were observed.";
       }
       leaf observation-point-in-time {
         type enumeration {
           enum current-accounting {
             description "For periodical subscriptions, the
                     observation-point-in-time where the metrics are being polled
                     and observed.";
           }
           enum initial-state {
             description "For 'on-change sync on start' subscriptions, the
               initial point in time when the subscription was established
               and the state was observed.";
           }
           enum state-changed {
             description "For 'on-change sync on start' subscriptions, the
               point in time when the state change was observed after the
               subscription was established.";
           }
         }
         description
         "This describes at which point in time the metrics were observed";
       }
       anydata notification-contents {
         description
           "This contains the values defined by the 'notification'
           statement unchanged.";
       }
     }

     // Subscription container
     augment "/sn:subscriptions/sn:subscription" {
       description
         "This augmentation adds the configuration switches for
         enabling the notification envelope and metadatas.";
       uses notif-env-configuration;
     }
     // Subscription RPCs
     augment "/sn:establish-subscription/sn:input" {



Huang Feng, et al.        Expires 17 April 2025                [Page 21]

Internet-Draft      YANG-Push Notification Container        October 2024


       description
         "This augmentation adds the configuration switches for
         enabling the notification envelope and other metadatas
         during the 'establish-subscription' RPC.";
       uses notif-env-configuration;
     }
     augment "/sn:modify-subscription/sn:input" {
       description
         "This augmentation adds the configuration switches for
         enabling the notification envelope and other metadatas
         during the 'establish-subscription' RPC.";
       uses notif-env-configuration;
     }

     // YANG-Push Capabilities extension
     augment "/sysc:system-capabilities/notc:subscription-capabilities" {
       description
         "Extension to the subscription-capabilities model to enable
         clients to learn whether the publisher supports the
         notification-envelope";

       container notification-metadata {
         description
           "Adds the notification metadata capabilities to subscription
           capabilities.";
         uses notif-env-capabilities;
       }
     }
   }
   <CODE ENDS>

5.  Security Considerations

   TBD

6.  IANA Considerations

   This document describes the URI used for the IETF XML Registry and
   registers a new YANG module name.

6.1.  URI

   IANA is requested to add this document as a reference in the
   following URI in the IETF XML Registry [RFC3688].







Huang Feng, et al.        Expires 17 April 2025                [Page 22]

Internet-Draft      YANG-Push Notification Container        October 2024


   URI: urn:ietf:params:xml:ns:netconf:notification:2.0
   Registrant Contact: The IESG.
   XML: N/A; the requested URI is an XML namespace.
   Reference: RFC-to-be

6.2.  YANG module name

   This document registers the following YANG module in the YANG Module
   Names Registry [RFC6020], within the "YANG Parameters" registry:

   name: ietf-notification-envelope
   namespace: urn:ietf:params:xml:ns:netconf:notification:2.0
   prefix: inotenv
   reference: RFC-to-be

6.3.  YANG SID-file

   IANA is requested to register a new ".sid" file in the "IETF YANG SID
   Registry" [I-D.ietf-core-sid]:

   SID range entry point: TBD
   SID range size: 50
   YANG module name: ietf-notification-envelope
   reference: RFC-to-be

   A ".sid" file is proposed in Appendix A.

7.  Acknowledgements

   The authors would like to thank Per Anderson, Andy Bierman, Carsten
   Bormann, Mohamed Boucadair, Tom Petch, Jason Sterne, Kent Watsen and
   Rob Wilton for their review and valuable comments.

8.  References

8.1.  Normative References

   [I-D.ietf-core-sid]
              Veillette, M., Pelov, A., Petrov, I., Bormann, C., and M.
              Richardson, "YANG Schema Item iDentifier (YANG SID)", Work
              in Progress, Internet-Draft, draft-ietf-core-sid-24, 22
              December 2023, <https://datatracker.ietf.org/doc/html/
              draft-ietf-core-sid-24>.

   [RFC1213]  McCloghrie, K. and M. Rose, "Management Information Base
              for Network Management of TCP/IP-based internets: MIB-II",
              STD 17, RFC 1213, DOI 10.17487/RFC1213, March 1991,
              <https://www.rfc-editor.org/info/rfc1213>.



Huang Feng, et al.        Expires 17 April 2025                [Page 23]

Internet-Draft      YANG-Push Notification Container        October 2024


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3339]  Klyne, G. and C. Newman, "Date and Time on the Internet:
              Timestamps", RFC 3339, DOI 10.17487/RFC3339, July 2002,
              <https://www.rfc-editor.org/info/rfc3339>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/info/rfc3688>.

   [RFC5277]  Chisholm, S. and H. Trevino, "NETCONF Event
              Notifications", RFC 5277, DOI 10.17487/RFC5277, July 2008,
              <https://www.rfc-editor.org/info/rfc5277>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010,
              <https://www.rfc-editor.org/info/rfc6020>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types",
              RFC 6991, DOI 10.17487/RFC6991, July 2013,
              <https://www.rfc-editor.org/info/rfc6991>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC7951]  Lhotka, L., "JSON Encoding of Data Modeled with YANG",
              RFC 7951, DOI 10.17487/RFC7951, August 2016,
              <https://www.rfc-editor.org/info/rfc7951>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8639]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Subscription to YANG Notifications",
              RFC 8639, DOI 10.17487/RFC8639, September 2019,
              <https://www.rfc-editor.org/info/rfc8639>.




Huang Feng, et al.        Expires 17 April 2025                [Page 24]

Internet-Draft      YANG-Push Notification Container        October 2024


   [RFC8641]  Clemm, A. and E. Voit, "Subscription to YANG Notifications
              for Datastore Updates", RFC 8641, DOI 10.17487/RFC8641,
              September 2019, <https://www.rfc-editor.org/info/rfc8641>.

   [RFC8791]  Bierman, A., Björklund, M., and K. Watsen, "YANG Data
              Structure Extensions", RFC 8791, DOI 10.17487/RFC8791,
              June 2020, <https://www.rfc-editor.org/info/rfc8791>.

   [RFC8792]  Watsen, K., Auerswald, E., Farrel, A., and Q. Wu,
              "Handling Long Lines in Content of Internet-Drafts and
              RFCs", RFC 8792, DOI 10.17487/RFC8792, June 2020,
              <https://www.rfc-editor.org/info/rfc8792>.

   [RFC9187]  Touch, J., "Sequence Number Extension for Windowed
              Protocols", RFC 9187, DOI 10.17487/RFC9187, January 2022,
              <https://www.rfc-editor.org/info/rfc9187>.

   [RFC9196]  Lengyel, B., Clemm, A., and B. Claise, "YANG Modules
              Describing Capabilities for Systems and Datastore Update
              Notifications", RFC 9196, DOI 10.17487/RFC9196, February
              2022, <https://www.rfc-editor.org/info/rfc9196>.

   [RFC9254]  Veillette, M., Ed., Petrov, I., Ed., Pelov, A., Bormann,
              C., and M. Richardson, "Encoding of Data Modeled with YANG
              in the Concise Binary Object Representation (CBOR)",
              RFC 9254, DOI 10.17487/RFC9254, July 2022,
              <https://www.rfc-editor.org/info/rfc9254>.

   [W3C.REC-xml-20001006]
              Bray, T., Paoli, J., Sperberg-McQueen, M., and E. Maler,
              "Extensible Markup Language (XML) 1.0 (Second Edition)",
              W3C, October 2000,
              <https://www.w3.org/TR/2000/REC-xml-20001006>.

8.2.  Informative References

   [I-D.ietf-netconf-notification-messages]
              Voit, E., Jenkins, T., Birkholz, H., Bierman, A., and A.
              Clemm, "Notification Message Headers and Bundles", Work in
              Progress, Internet-Draft, draft-ietf-netconf-notification-
              messages-08, 17 November 2019,
              <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-
              notification-messages-08>.

   [RFC6470]  Bierman, A., "Network Configuration Protocol (NETCONF)
              Base Notifications", RFC 6470, DOI 10.17487/RFC6470,
              February 2012, <https://www.rfc-editor.org/info/rfc6470>.




Huang Feng, et al.        Expires 17 April 2025                [Page 25]

Internet-Draft      YANG-Push Notification Container        October 2024


   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.

   [RFC8259]  Bray, T., Ed., "The JavaScript Object Notation (JSON) Data
              Interchange Format", STD 90, RFC 8259,
              DOI 10.17487/RFC8259, December 2017,
              <https://www.rfc-editor.org/info/rfc8259>.

   [RFC8340]  Bjorklund, M. and L. Berger, Ed., "YANG Tree Diagrams",
              BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,
              <https://www.rfc-editor.org/info/rfc8340>.

   [RFC9232]  Song, H., Qin, F., Martinez-Julia, P., Ciavaglia, L., and
              A. Wang, "Network Telemetry Framework", RFC 9232,
              DOI 10.17487/RFC9232, May 2022,
              <https://www.rfc-editor.org/info/rfc9232>.

Appendix A.  .sid file

   Note to the RFC-Editor: Please remove this section before publishing.

   For CBOR encoding using YANG-SIDs identifiers, a ".sid" file is
   requested to IANA in Section 6.3.



























Huang Feng, et al.        Expires 17 April 2025                [Page 26]

Internet-Draft      YANG-Push Notification Container        October 2024


   <CODE BEGINS> file "ietf-notification-envelope@2024-10-10.sid"
   {
     "ietf-sid-file:sid-file": {
       "module-name": "ietf-notification-envelope",
       "module-revision": "2024-10-10",
       "description": "YANG-Push Notification structure",
       "dependency-revision": [
         {
           "module-name": "ietf-yang-types",
           "module-revision": "2013-07-15"
         },
         {
           "module-name": "ietf-subscribed-notifications",
           "module-revision": "2019-09-09"
         }
       ],
       "assignment-range": [
         {
           "entry-point": "2550",
           "size": "50"
         }
       ],
       "item": [
         {
           "namespace": "module",
           "identifier": "ietf-notification-envelope",
           "sid": "2550"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-notification-envelope:notification-envelope",
           "sid": "2551"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-notification-envelope:notification-envelope/event-time",
           "sid": "2552"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-notification-envelope:notification-envelope/notification-contents",
           "sid": "2553"
         }
       ]
     }
   }
   <CODE ENDS>




Huang Feng, et al.        Expires 17 April 2025                [Page 27]

Internet-Draft      YANG-Push Notification Container        October 2024


        Figure 9: .sid file for "ietf-notification-envelope" module

Authors' Addresses

   Alex Huang Feng
   INSA-Lyon
   Lyon
   France
   Email: alex.huang-feng@insa-lyon.fr


   Pierre Francois
   INSA-Lyon
   Lyon
   France
   Email: pierre.francois@insa-lyon.fr


   Thomas Graf
   Swisscom
   Binzring 17
   CH-8045 Zurich
   Switzerland
   Email: thomas.graf@swisscom.com


   Benoit Claise
   Huawei
   Email: benoit.claise@huawei.com






















Huang Feng, et al.        Expires 17 April 2025                [Page 28]
